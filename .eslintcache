[{"C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\index.js":"1","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\reportWebVitals.js":"2","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\App.js":"3","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\pages\\WeixinUser.js":"4","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\example\\pages\\user.js":"5","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\mock\\example\\index.js":"6"},{"size":682,"mtime":1622633199715,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1622633199717,"results":"9","hashOfConfig":"8"},{"size":189,"mtime":1622635451734,"results":"10","hashOfConfig":"8"},{"size":13978,"mtime":1622633199716,"results":"11","hashOfConfig":"8"},{"size":1881,"mtime":1622635249042,"results":"12","hashOfConfig":"8"},{"size":295,"mtime":1622622643633,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1mqmyz5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\index.js",[],["28","29"],"C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\reportWebVitals.js",[],"C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\App.js",["30"],"C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\pages\\WeixinUser.js",["31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47"],"import {Card, Table, Button, Popconfirm, Modal, message, Space, Input, DatePicker, Form, Row, Col} from 'antd';\r\nimport axios from 'axios';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport React, { useState,useEffect,useRef,forwardRef, useCallback } from 'react'\r\nimport moment from 'moment';\r\nconst { confirm } = Modal;\r\nconst { Search } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction WeixinUser() {\r\n    const modal = useRef(null);\r\n\r\n    const [data, setData] = useState({});\r\n    const [detail, setDetail] = useState({nickname: \"no\"});\r\n    const [selectedRowKeys, setSelectedRowKeys ] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10)\r\n    const [total, setTotal] = useState(0);\r\n    const [pagination, setPagination] = useState(true);\r\n    const [deleteOp, setDeleteOp] = useState(0);\r\n    const [keyword, setKeyword] = useState(new String(\"\"));\r\n    const [searchLoading, setSearchLoading] = useState(false);\r\n    const [searchDate, setSearchDate] = useState({beginDate: null, endDate: null});\r\n    const [insertFormModalVisible, setInsertFormModalVisible] = useState(false);\r\n    const [insertOp, setInsertOp] = useState(0);\r\n    const [modalButton, setModalButton] = useState( () => {\r\n        return (\r\n            <>\r\n                <Button key=\"yes\" type=\"primary\" onClick={() => { onCreate(form.getFieldsValue())}}>\r\n                    确认\r\n                </Button>,\r\n                <Button key=\"no\" onClick={() => { onCancel()}}>\r\n                    取消\r\n                </Button>,\r\n                <Button key=\"update\" onClick={() => { onUpdate()}}>\r\n                    修改\r\n                </Button>\r\n            </>\r\n\r\n        )\r\n    })\r\n    const onUpdate = function() {\r\n        setModalButton(() => {\r\n            return (\r\n                <>\r\n                    <Button key=\"yes\" type=\"primary\" onClick={() => { onCreate(form.getFieldsValue())}}>\r\n                        确认\r\n                    </Button>,\r\n                    <Button key=\"no\" onClick={() => { onCancel()}}>\r\n                        取消\r\n                    </Button>,\r\n                </>\r\n\r\n            )\r\n        })\r\n    }\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const formItem = [{\r\n        field: \"nickname\",\r\n        dataType: \"String\",\r\n        rule: [ {\r\n            required: true,\r\n            message: '必须录入!',\r\n        }]\r\n    },{\r\n        field: \"province\",\r\n        dataType: \"String\",\r\n        rule: [ {\r\n            required: true,\r\n            message: '必须录入!',\r\n        }]\r\n    }]\r\n\r\n    const  getDetail = function(id) {\r\n        return axios.get('http://127.0.0.1:8888/xproject/weixinUser/' + id)\r\n            .then((resp) => {\r\n                if (resp.data.code == 200) {\r\n                    //setDetail(resp.data.data);\r\n                    form.setFieldsValue(resp.data.data)\r\n                    console.log(resp.data.data);\r\n\r\n                    setInsertFormModalVisible(true);\r\n                } else {\r\n                    message.error({\r\n                        content: '查询失败',\r\n                        className: 'custom-class',\r\n                        style: {\r\n                            marginTop: '20vh',\r\n                        },\r\n                    });\r\n                }\r\n            }).catch( err => {\r\n                message.error({\r\n                    content: '异常错误',\r\n                    className: 'custom-class',\r\n                    style: {\r\n                        marginTop: '20vh',\r\n                    },\r\n                })\r\n            })\r\n    }\r\n\r\n    const listByPage = function(page, pageSize) {\r\n        setPage(page)\r\n        setPageSize(pageSize)\r\n        axios.post('http://127.0.0.1:8888/xproject/weixinUser/list', { page: page, rows: pageSize, keyword: keyword, beginDate: searchDate.beginDate, endDate: searchDate.endDate})\r\n            .then((resp) => {\r\n                console.log(resp.data.data);\r\n                setData(resp.data.data);\r\n                if (resp.data.data.records.length === 0 && page === 1) {\r\n                    setPagination(false)\r\n                } else if (resp.data.data.records.length === 0 && page > 1) {\r\n                    console.log(\"进来减1\")\r\n                    setPage(--page)\r\n                }\r\n                if (resp.data.total > 0) {\r\n                    setPagination(true)\r\n                } else {\r\n                    setPagination(false)\r\n                }\r\n                setSearchLoading(false)\r\n            });\r\n    }\r\n\r\n    const deleteRecordsPromise = function(ids) {\r\n        return axios.delete('http://127.0.0.1:8888/xproject/weixinUser', {data: ids})\r\n            .then((resp) => {\r\n                if (resp.data.code == 200) {\r\n                    message.success({\r\n                        content: '删除成功',\r\n                        className: 'custom-class',\r\n                        style: {\r\n                            marginTop: '20vh',\r\n                        },\r\n                    });\r\n                    setDeleteOp(deleteOp + 1);\r\n                    //listByPage(page, pageSize)\r\n                    console.log(page);\r\n                } else {\r\n                    message.error({\r\n                        content: '删除失败',\r\n                        className: 'custom-class',\r\n                        style: {\r\n                            marginTop: '20vh',\r\n                        },\r\n                    });\r\n                }\r\n            }).catch( err => {\r\n                    message.error({\r\n                        content: '异常错误',\r\n                        className: 'custom-class',\r\n                        style: {\r\n                            marginTop: '20vh',\r\n                        },\r\n                    })\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const deleteConfirm = function(ids) {\r\n        console.log(ids);\r\n        confirm({\r\n            title: '确定删除？',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: '删除之后无法撤回，请谨慎选择！',\r\n            okText: '确定',\r\n            okType: 'danger',\r\n            cancelText: '取消',\r\n            onOk() {\r\n                deleteRecordsPromise(ids).then(r => console.log(\"success\"))\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel');\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        listByPage(page, pageSize)\r\n    },[deleteOp, insertOp])\r\n\r\n    useEffect(() => {\r\n        setPage(1);\r\n        listByPage(page, pageSize)\r\n        console.log(\"现在\" + page)\r\n    },[keyword,searchDate, pageSize])\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '昵称',\r\n            width: 100,\r\n            dataIndex: 'nickname',\r\n            key: 'nickname',\r\n            fixed: 'left',\r\n            align: 'center'\r\n        },\r\n        {\r\n            title: '省份',\r\n            width: 100,\r\n            dataIndex: 'province',\r\n            key: 'province',\r\n            align: 'center'\r\n\r\n        },\r\n        {\r\n            title: '头像',\r\n            dataIndex: 'headimgurl',\r\n            key: 'headimgurl',\r\n            width: 150,\r\n            render: (headimgurl) => <img src={headimgurl}></img>,\r\n            align: 'center'\r\n\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'operation',\r\n            fixed: 'right',\r\n            width: 100,\r\n            render: (record) => {\r\n                return(\r\n                    <div>\r\n                        <Button type='primary' size='small' onClick={() => getDetail(record.id)}>详情</Button>\r\n                        <Button style={{margin: '0 1rem'}} type='primary' size='small'>修改</Button>\r\n                        <Button style={{margin: '0 1rem'}} type='danger' size='small' onClick={() => deleteConfirm(new Array(record.id))}>删除</Button>\r\n                    </div>\r\n                )\r\n            },\r\n            align: 'center'\r\n\r\n        },\r\n    ];\r\n    const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: (selectedRowKeys) => setSelectedRowKeys(selectedRowKeys),\r\n        selections: [\r\n            Table.SELECTION_ALL,\r\n            Table.SELECTION_INVERT,\r\n            {\r\n                key: 'odd',\r\n                text: 'Select Odd Row',\r\n                onSelect: changableRowKeys => {\r\n                    let newSelectedRowKeys = [];\r\n                    newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                        if (index % 2 !== 0) {\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                    setSelectedRowKeys(newSelectedRowKeys);\r\n                },\r\n            }\r\n        ],\r\n    };\r\n\r\n\r\n\r\n    const onCancel = function() {\r\n        setInsertFormModalVisible(false);\r\n        form.resetFields();\r\n    }\r\n    const onCreate = (formData) => {\r\n        console.log('Received values of form: ', formData);\r\n        return axios.post('http://127.0.0.1:8888/xproject/weixinUser', formData)\r\n            .then((resp) => {\r\n                if (resp.data.code == 200) {\r\n                    message.success({\r\n                        content: '新增成功',\r\n                        className: 'custom-class',\r\n                        style: {\r\n                            marginTop: '20vh',\r\n                        },\r\n                    });\r\n                    setInsertOp(insertOp + 1)\r\n                    // listByPage(page, pageSize)\r\n                    console.log(page);\r\n\r\n                } else {\r\n                    message.error({\r\n                        content: '新增失败',\r\n                        className: 'custom-class',\r\n                        style: {\r\n                            marginTop: '20vh',\r\n                        },\r\n                    });\r\n                }\r\n            }).catch( err => {\r\n            message.error({\r\n                content: '异常错误',\r\n                className: 'custom-class',\r\n                style: {\r\n                    marginTop: '20vh',\r\n                },\r\n            })\r\n        })\r\n    };\r\n\r\n    const layout = {\r\n        labelCol: { span: 8},\r\n        wrapperCol: { span: 16}\r\n    };\r\n    const tailLayout = {\r\n        wrapperCol: {offset: 8, span: 16}\r\n    }\r\n    const FormItems = [];\r\n    formItem.forEach((e) => {\r\n        FormItems.push((\r\n            <Form.Item\r\n                name={e.field}\r\n                label={e.field}\r\n                rules={e.rule}\r\n            >\r\n                <Input type=\"text\" />\r\n            </Form.Item>\r\n        ));\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Card title=\"微信用户\" extra={[\r\n                <Button key='1' type=\"primary\" size=\"small\" onClick={() => setInsertFormModalVisible(true)}>新增</Button>,\r\n                <Button key='2' type=\"danger\" size=\"small\" onClick={() => {deleteConfirm(selectedRowKeys.map((currentValue,index,arr) => {return arr[index]}))}}>删除</Button>]\r\n            }>\r\n                <Space>\r\n                    <Search placeholder=\"请输入搜索关键字\" allowClear loading={searchLoading} onSearch ={(keyword) => {setSearchLoading(true);setKeyword(new String(keyword))}}/>\r\n                    <RangePicker\r\n                        ranges={{\r\n                            Today: [moment(), moment()],\r\n                            '本月': [moment().startOf('month'), moment().endOf('month')],\r\n                        }}\r\n                        showTime\r\n                        format=\"YYYY-MM-DD HH:mm:ss\"\r\n                        onChange={(dates, dateStrings) => {setSearchDate({\r\n                            ...searchDate,\r\n                            beginDate: dateStrings[0], endDate: dateStrings[1]\r\n                        })}}\r\n                    />\r\n                </Space>\r\n                <Space>\r\n                <Table\r\n                    rowSelection={rowSelection}\r\n                    bordered\r\n                    columns={columns}\r\n                    dataSource={data.records}\r\n                    scroll={{ x: 1000, y: 800 }}\r\n                    rowKey={record => record.id}\r\n                    pagination={{pagination}?\r\n                        {\r\n                            total: data.total,\r\n                            current: data.page,\r\n                            defaultPageSize: pageSize,\r\n                            defaultCurrent: 1,\r\n                            onChange: listByPage,\r\n                            showQuickJumper: true,\r\n                            showSizeChanger: true,\r\n                            showTotal: (total, range) => `${range[0]}-${range[1]} 共 ${total} 条`\r\n                        } :false}/>\r\n                </Space>\r\n                <Modal\r\n                    bodyStyle={{maxHeight: '500px', overflowY: 'scroll'}}\r\n                    width={500}\r\n                    title=\"新增\"\r\n                    centered\r\n                    visible={insertFormModalVisible}\r\n                    destroyOnClose={false}\r\n                    onCancel={()=>onCancel()}\r\n                    footer={\r\n\r\n                        <Row>\r\n                            <Col span={8} offset={8}>\r\n                                <Space>\r\n                                    {modalButton}\r\n                                </Space>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    }\r\n                >\r\n                    <Form form={form}\r\n                        {...layout}\r\n                        preserve={false}\r\n                        layout=\"vertical\"\r\n                        name=\"form_in_modal\"\r\n                        onFinish={onCreate}\r\n                    >\r\n                        {FormItems}\r\n                    </Form>\r\n                </Modal>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\nexport default  WeixinUser","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\example\\pages\\user.js",[],"C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\mock\\example\\index.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":18},{"ruleId":"52","severity":1,"message":"56","line":1,"column":30,"nodeType":"54","messageId":"55","endLine":1,"endColumn":40},{"ruleId":"52","severity":1,"message":"57","line":4,"column":43,"nodeType":"54","messageId":"55","endLine":4,"endColumn":53},{"ruleId":"52","severity":1,"message":"58","line":4,"column":55,"nodeType":"54","messageId":"55","endLine":4,"endColumn":66},{"ruleId":"52","severity":1,"message":"59","line":16,"column":11,"nodeType":"54","messageId":"55","endLine":16,"endColumn":16},{"ruleId":"52","severity":1,"message":"60","line":19,"column":12,"nodeType":"54","messageId":"55","endLine":19,"endColumn":18},{"ruleId":"52","severity":1,"message":"61","line":19,"column":20,"nodeType":"54","messageId":"55","endLine":19,"endColumn":29},{"ruleId":"52","severity":1,"message":"62","line":23,"column":12,"nodeType":"54","messageId":"55","endLine":23,"endColumn":17},{"ruleId":"52","severity":1,"message":"63","line":23,"column":19,"nodeType":"54","messageId":"55","endLine":23,"endColumn":27},{"ruleId":"64","severity":1,"message":"65","line":26,"column":44,"nodeType":"66","messageId":"67","endLine":26,"endColumn":58},{"ruleId":"68","severity":1,"message":"69","line":84,"column":36,"nodeType":"70","messageId":"71","endLine":84,"endColumn":38},{"ruleId":"68","severity":1,"message":"69","line":135,"column":36,"nodeType":"70","messageId":"71","endLine":135,"endColumn":38},{"ruleId":"72","severity":1,"message":"73","line":189,"column":7,"nodeType":"74","endLine":189,"endColumn":27,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"76","line":195,"column":7,"nodeType":"74","endLine":195,"endColumn":37,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":220,"column":37,"nodeType":"80","endLine":220,"endColumn":59},{"ruleId":"68","severity":1,"message":"69","line":275,"column":36,"nodeType":"70","messageId":"71","endLine":275,"endColumn":38},{"ruleId":"52","severity":1,"message":"81","line":311,"column":11,"nodeType":"54","messageId":"55","endLine":311,"endColumn":21},{"ruleId":"64","severity":1,"message":"65","line":334,"column":146,"nodeType":"66","messageId":"67","endLine":334,"endColumn":165},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'WeixinUser' is defined but never used.","Identifier","unusedVar","'Popconfirm' is defined but never used.","'forwardRef' is defined but never used.","'useCallback' is defined but never used.","'modal' is assigned a value but never used.","'detail' is assigned a value but never used.","'setDetail' is assigned a value but never used.","'total' is assigned a value but never used.","'setTotal' is assigned a value but never used.","no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'listByPage', 'page', and 'pageSize'. Either include them or remove the dependency array.","ArrayExpression",["84"],"React Hook useEffect has missing dependencies: 'listByPage' and 'page'. Either include them or remove the dependency array.",["85"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'tailLayout' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [deleteOp, insertOp, listByPage, page, pageSize]",{"range":"90","text":"91"},"Update the dependencies array to be: [keyword, searchDate, pageSize, listByPage, page]",{"range":"92","text":"93"},[6389,6409],"[deleteOp, insertOp, listByPage, page, pageSize]",[6534,6564],"[keyword, searchDate, pageSize, listByPage, page]"]