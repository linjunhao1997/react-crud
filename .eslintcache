[{"D:\\前端项目\\antdtemplate\\src\\index.js":"1","D:\\前端项目\\antdtemplate\\src\\reportWebVitals.js":"2","D:\\前端项目\\antdtemplate\\src\\App.js":"3","D:\\前端项目\\antdtemplate\\src\\example\\pages\\user.js":"4","D:\\前端项目\\antdtemplate\\src\\example\\pages\\user1.js":"5","D:\\前端项目\\antdtemplate\\src\\example\\pages\\user1Detail.js":"6","D:\\前端项目\\antdtemplate\\src\\lib\\antd\\path.js":"7","D:\\前端项目\\antdtemplate\\src\\lib\\antd\\sorter2s.js":"8","D:\\前端项目\\antdtemplate\\src\\mock\\example\\index.js":"9","D:\\前端项目\\antdtemplate\\src\\pages\\question\\question_table.js":"10","D:\\前端项目\\antdtemplate\\src\\pages\\question\\question_detail.js":"11","D:\\前端项目\\antdtemplate\\src\\pages\\question\\question_update.js":"12","D:\\前端项目\\antdtemplate\\src\\store\\index.js":"13","D:\\前端项目\\antdtemplate\\src\\context\\index.js":"14","D:\\前端项目\\antdtemplate\\src\\store\\QuestionStore.js":"15","D:\\前端项目\\antdtemplate\\src\\pages\\question\\question_create.js":"16"},{"size":909,"mtime":1622988090886,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1607146478463,"results":"19","hashOfConfig":"18"},{"size":5741,"mtime":1622832943607,"results":"20","hashOfConfig":"18"},{"size":1966,"mtime":1622642160909,"results":"21","hashOfConfig":"18"},{"size":6953,"mtime":1622826155531,"results":"22","hashOfConfig":"18"},{"size":1027,"mtime":1622833108087,"results":"23","hashOfConfig":"18"},{"size":816,"mtime":1622875538438,"results":"24","hashOfConfig":"18"},{"size":1060,"mtime":1622818652499,"results":"25","hashOfConfig":"18"},{"size":963,"mtime":1622818652500,"results":"26","hashOfConfig":"18"},{"size":10993,"mtime":1623047714056,"results":"27","hashOfConfig":"18"},{"size":851,"mtime":1622834147964,"results":"28","hashOfConfig":"18"},{"size":2735,"mtime":1623048046368,"results":"29","hashOfConfig":"18"},{"size":220,"mtime":1622985544514,"results":"30","hashOfConfig":"18"},{"size":90,"mtime":1622957865962,"results":"31","hashOfConfig":"18"},{"size":324,"mtime":1623047688933,"results":"32","hashOfConfig":"18"},{"size":2772,"mtime":1622993855200,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"co4f4z",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"37"},"D:\\前端项目\\antdtemplate\\src\\index.js",["73"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport {ConfigProvider, Modal} from 'antd';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from \"mobx-react\";\nimport store from \"@/store/QuestionStore\";\n\n\nReactDOM.render(\n    /*<React.StrictMode>*/\n    <ConfigProvider locale={zhCN}>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </ConfigProvider>,\n    /*</React.StrictMode>,*/\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["74","75"],"D:\\前端项目\\antdtemplate\\src\\reportWebVitals.js",[],"D:\\前端项目\\antdtemplate\\src\\App.js",["76","77"],"import '@/App.css';\r\nimport {Layout, Menu, PageHeader} from 'antd';\r\nimport {\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n    UserOutlined,\r\n    VideoCameraOutlined,\r\n    UploadOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport React, {useState} from \"react\";\r\nimport SettingOutlined from \"@ant-design/icons/lib/icons/SettingOutlined\";\r\nimport AppstoreOutlined from \"@ant-design/icons/lib/icons/AppstoreOutlined\";\r\nimport {\r\n    Route,\r\n    Link, Switch\r\n} from 'react-router-dom'\r\nimport User from \"@/example/pages/user\";\r\nimport User1 from \"@/example/pages/user1\";\r\nimport User1Detail from \"@/example/pages/user1Detail\";\r\nimport QuestionTable from \"@/pages/question/question_table\"\r\nimport RoutePath from '@/lib/antd/path'\r\nimport QuestionDetail from \"@/pages/question/question_detail\";\r\n\r\nconst {Header, Sider, Content, Footer} = Layout;\r\nconst {SubMenu} = Menu;\r\n\r\nconst App = () => {\r\n    const [state, setState] = useState({\r\n        collapsed: false,\r\n    })\r\n\r\n    const toggle = () => {\r\n        setState({\r\n            collapsed: !state.collapsed\r\n        })\r\n    }\r\n\r\n    const rootSubmenuKeys = ['sub1', 'sub2', 'sub4'];\r\n    const [openKeys, setOpenKeys] = React.useState([]);\r\n    const onOpenChange = keys => {\r\n        const latestOpenKey = keys.find(key => openKeys.indexOf(key) === -1);\r\n        if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n            setOpenKeys(keys);\r\n        } else {\r\n            setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\r\n        }\r\n    }\r\n\r\n    return (\r\n            <Layout>\r\n                <Sider trigger={null}\r\n                       collapsible\r\n                       collapsed={state.collapsed}\r\n                       style={{\r\n                           overflow: 'auto',\r\n                           height: '100vh',\r\n                       }}\r\n                       width={256}\r\n                       theme=\"light\">\r\n\r\n                    <div className=\"logo\"/>\r\n                    <Menu mode=\"inline\" openKeys={openKeys} onOpenChange={onOpenChange}>\r\n                        <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"用户\">\r\n                            <Menu.Item key=\"1\">\r\n                                <Link to=\"/user/user_info\">用户示例</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"2\">\r\n                                <Link to=\"/user/user_info1\">用户示例1</Link>\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item key=\"4\">Option 4</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub2\" icon={<AppstoreOutlined/>} title=\"试题\">\r\n                            <Menu.Item key=\"5\">\r\n                                <Link to=\"/question/table\">列表</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n                            <SubMenu key=\"sub3\" title=\"Submenu\">\r\n                                <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n                                <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n                            </SubMenu>\r\n                        </SubMenu>\r\n                        <SubMenu key=\"sub4\" icon={<SettingOutlined/>} title=\"Navigation Three\">\r\n                            <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n                            <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n                            <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n                            <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </Sider>\r\n               \r\n                <Layout className=\"site-layout\">\r\n                    <Header className=\"site-layout-background\" style={{padding: 0}}>\r\n                        {React.createElement(state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n                            className: 'trigger',\r\n                            onClick: toggle,\r\n                            style: {\r\n                                marginLeft: '2vh'\r\n                            }\r\n                        })}\r\n                    </Header>\r\n                  \r\n                    \r\n                    <div className=\"site-page-header-ghost-wrapper\">\r\n                    <PageHeader ghost={false}>\r\n                    <RoutePath></RoutePath>\r\n                    </PageHeader>\r\n                    </div>\r\n                    <Content\r\n                        className=\"site-layout-background\"\r\n                        style={{\r\n                            margin: '14px 14px',\r\n                            padding: 24,\r\n                            minHeight: 280,\r\n                        }}\r\n                    >\r\n                        <Switch>\r\n                            <Route path=\"/user/user_info\">\r\n                                <User />\r\n                            </Route>\r\n                            <Route path=\"/user/user_info1\" exact>\r\n                                <User1 />\r\n                            </Route>\r\n                            <Route path=\"/user/user_info1/:id\" component={User1Detail}/>\r\n                            <Route path=\"/question/table\" exact>\r\n                                <QuestionTable />\r\n                            </Route>\r\n                            <Route path=\"/question/table/:id\" component={QuestionDetail}/>\r\n\r\n                        </Switch>\r\n                     \r\n                    </Content>\r\n                  \r\n                    <Footer style={{textAlign: 'center'}}>Ant Design ©2021 Created by voice244</Footer>\r\n                </Layout>\r\n               \r\n            </Layout>\r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n","D:\\前端项目\\antdtemplate\\src\\example\\pages\\user.js",[],"D:\\前端项目\\antdtemplate\\src\\example\\pages\\user1.js",["78","79","80"],"import {React, useState} from 'react';\r\nimport { Button, Col, Form, Input, Row, Table, Select, Modal, Descriptions } from 'antd';\r\nimport { useAntdTable } from 'ahooks';\r\nimport {\r\n    ControlledMenu,\r\n    MenuItem\r\n} from '@szhsin/react-menu';\r\nimport '@szhsin/react-menu/dist/index.css';\r\nimport { PaginatedParams } from 'ahooks/lib/useAntdTable';\r\nimport { sorter2s } from '@/lib/antd/sorter2s'\r\nimport { useHistory, useLocation } from 'react-router';\r\nconst { Option } = Select;\r\n\r\ninterface Item {\r\n    name: {\r\n        last: string;\r\n    };\r\n    email: string;\r\n    phone: string;\r\n    gender: 'male' | 'female';\r\n}\r\n\r\ninterface Result {\r\n    total: number;\r\n    list: Item[];\r\n}\r\n\r\nlet sorters = {}\r\n\r\nconst getTableData = (\r\n\r\n    { current, pageSize,sorter }: PaginatedParams[0],\r\n    formData: Object,\r\n): Promise<Result> => {\r\n\r\n    let query = `page=${current}&size=${pageSize}`;\r\n    Object.entries(formData).forEach(([key, value]) => {\r\n        if (value) {\r\n            query += `&${key}=${value}`;\r\n        }\r\n    });\r\n\r\n    sorters = sorter2s(sorter, sorters)\r\n    console.log(sorters)\r\n    return fetch(`https://randomuser.me/api?results=55&${query}`)\r\n        .then((res) => res.json())\r\n        .then((res) => ({\r\n            total: res.info.results,\r\n            list: res.results,\r\n        }));\r\n};\r\n\r\nconst User1 = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\r\n    const [currentRecord, setCurrentRecord] = useState(null);\r\n    const [modelState, setModelState] = useState({\r\n        title: \"\",\r\n        visible: false\r\n    })\r\n    const handleCreateClick = () => {\r\n        \r\n    }\r\n\r\n    const handleDetailClick = () => {\r\n      \r\n        history.push(\"/user/user_info1/123456\")\r\n\r\n    }\r\n\r\n    const handleUpdateClick = () => {\r\n        setModelState({\r\n            title: '修改',\r\n            visible: true\r\n           }\r\n        )\r\n    }\r\n\r\n    const handleDeleteClick = () => {\r\n        \r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        setModelState({\r\n            visible: false\r\n           }\r\n        )\r\n    }\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const { tableProps, search } = useAntdTable(getTableData, {\r\n        defaultPageSize: 5,\r\n        form,\r\n    });\r\n   \r\n    const { pagination } = tableProps\r\n    pagination.showTotal = (total) => {\r\n        return `共 ${total} 条`;\r\n    }\r\n    pagination.showQuickJumper = true\r\n\r\n    const { type, changeType, submit, reset } = search;\r\n\r\n    const columns = [\r\n        {\r\n            title: 'name',\r\n            dataIndex: ['name', 'last'],\r\n        },\r\n        {\r\n            title: 'email',\r\n            dataIndex: 'email',\r\n        },\r\n        {\r\n            title: 'phone',\r\n            dataIndex: 'phone',\r\n            sorter: {\r\n                multiple: 1,\r\n            }\r\n        },\r\n        {\r\n            title: 'gender',\r\n            dataIndex: 'gender',\r\n            sorter: {\r\n                multiple: 2,\r\n            }\r\n\r\n        },\r\n    ];\r\n\r\n    const advanceSearchForm = (\r\n        <div>\r\n            <Form form={form}>\r\n                <Row gutter={24}>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"name\" name=\"name\">\r\n                            <Input placeholder=\"name\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"email\" name=\"email\">\r\n                            <Input placeholder=\"email\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"phone\" name=\"phone\">\r\n                            <Input placeholder=\"phone\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row justify=\"end\">\r\n            \r\n                    <Form.Item style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                        <Button type=\"primary\" onClick={submit}>\r\n                            查询\r\n                        </Button>\r\n                        <Button onClick={reset} style={{ marginLeft: 16 }}>\r\n                            重置\r\n                        </Button>\r\n                        <Button type=\"link\" onClick={changeType}>\r\n                            简单查询\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n\r\n    const searchForm = (\r\n        <div style={{ marginBottom: 16 }}>\r\n            <Form form={form} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Form.Item name=\"gender\">\r\n                    <Select style={{ width: 120, marginRight: 16 }} onChange={submit}>\r\n                        <Option value=\"\">all</Option>\r\n                        <Option value=\"male\">male</Option>\r\n                        <Option value=\"female\">female</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name=\"name\">\r\n                    <Input.Search placeholder=\"enter name\" style={{ width: 240 }} onSearch={submit} />\r\n                </Form.Item>\r\n                <Button type=\"link\" onClick={changeType}>\r\n                    复杂查询\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n\r\n  \r\n    const modal = (\r\n        <div>\r\n            <Modal\r\n          title={modelState.title}\r\n          visible={modelState.visible}\r\n          onOk={()=>{}}\r\n          onCancel={handleCancelClick}\r\n          okText=\"确认\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <p>{modelState.visible?currentRecord.gender:null}</p>\r\n        </Modal>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {type === 'simple' ? searchForm : advanceSearchForm}\r\n            <Table \r\n                columns={columns} \r\n                rowKey=\"email\" \r\n                {...tableProps} \r\n                onRow={record => {\r\n                    return {\r\n                      onContextMenu: e => {\r\n                        console.log(record)\r\n                        e.preventDefault();\r\n                        setAnchorPoint({ x: e.clientX, y: e.clientY });\r\n                        setOpen(true);\r\n                        setCurrentRecord(record)\r\n                      },\r\n                    };\r\n                  }}/>\r\n            <ControlledMenu anchorPoint={anchorPoint} isOpen={isOpen}\r\n                onClose={() => setOpen(false)}>\r\n                <MenuItem onClick={handleDetailClick}>详情</MenuItem>\r\n                <MenuItem onClick={handleUpdateClick}>修改</MenuItem>\r\n                <MenuItem onClick={handleDeleteClick}>删除</MenuItem>\r\n            </ControlledMenu>\r\n            {modal}\r\n        </div>\r\n\r\n       \r\n    );\r\n};\r\n\r\nexport default User1","D:\\前端项目\\antdtemplate\\src\\example\\pages\\user1Detail.js",[],"D:\\前端项目\\antdtemplate\\src\\lib\\antd\\path.js",[],"D:\\前端项目\\antdtemplate\\src\\lib\\antd\\sorter2s.js",["81"],"export const sorter2s = (sorter, sorters) => {\r\n    if (sorter) {\r\n        if (Array.isArray(sorter)) {\r\n            sorter.map((el,index)=>{\r\n                if (sorter[index].order === 'ascend') {\r\n                    sorters[sorter[index].field] = 1\r\n                } else if (sorter[index].order === 'descend') {\r\n                    sorters[sorter[index].field] = -1\r\n                } else {\r\n                   delete sorters[sorter[index].field]\r\n                }\r\n                return\r\n            })\r\n        } else {\r\n            if (sorter.order === 'ascend') {\r\n                sorters[sorter.field] = 1\r\n            } else if (sorter.order === 'descend') {\r\n                sorters[sorter.field] = -1\r\n            } else {\r\n                delete sorters[sorter.field]\r\n                \r\n            }\r\n            Object.keys(sorters).forEach((field, index) => {\r\n                if (field !== sorter.field) {\r\n                    delete sorters[field]\r\n                }\r\n            })\r\n           \r\n        }\r\n    }\r\n    return sorters\r\n}","D:\\前端项目\\antdtemplate\\src\\mock\\example\\index.js",[],"D:\\前端项目\\antdtemplate\\src\\pages\\question\\question_table.js",["82","83","84"],"D:\\前端项目\\antdtemplate\\src\\pages\\question\\question_detail.js",["85","86","87"],"import {Descriptions} from 'antd'\r\nimport {useRequest} from 'ahooks'\r\nimport {useParams} from 'react-router-dom'\r\nimport React, {useEffect, useState} from 'react';\r\n\r\nconst QuestionDetail = () => {\r\n    const { id } = useParams()\r\n    const { data, error, loading } = useRequest({\r\n        url: `/api/question/${id}`,\r\n        method: 'get',\r\n    })\r\n    if (error) {\r\n        return <div>failed to load</div>;\r\n    }\r\n    if (loading) {\r\n        return <div>loading...</div>;\r\n    }\r\n    let result = data.data\r\n    return (\r\n        <div>\r\n            // todo  如果是对象或者null不能直接输出\r\n            <Descriptions title=\"问题详情\">\r\n               <Descriptions.Item label=\"question\" key=\"question\">{result[\"question\"]}</Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionDetail","D:\\前端项目\\antdtemplate\\src\\pages\\question\\question_update.js",["88","89","90","91","92","93","94","95","96","97"],"D:\\前端项目\\antdtemplate\\src\\store\\index.js",[],"D:\\前端项目\\antdtemplate\\src\\context\\index.js",[],"D:\\前端项目\\antdtemplate\\src\\store\\QuestionStore.js",["98"],"D:\\前端项目\\antdtemplate\\src\\pages\\question\\question_create.js",["99","100","101","102","103","104","105","106","107"],"import {Button, Col, Form, Input, message, Modal, Row, Space} from \"antd\";\r\nimport React, {forwardRef, useImperativeHandle, useRef, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {useObserver} from \"mobx-react-lite\";\r\n\r\nconst QuestionCreate = (props) => {\r\n\r\n    const [form] = Form.useForm()\r\n    const {createSubmit$, refresh} = props\r\n\r\n    const submit = () => {\r\n\r\n        axios.post(`/api/question`, form.getFieldsValue())\r\n            .then((resp) => {\r\n                    if (resp.data.success) {\r\n                        message.success({\r\n                            content: resp.data.message,\r\n                            className: 'custom-class',\r\n                            style: {\r\n                                marginTop: '20vh',\r\n                            },\r\n                        });\r\n                        refresh()\r\n                    } else {\r\n                        message.error({\r\n                            content: resp.data.message,\r\n                            className: 'custom-class',\r\n                            style: {\r\n                                marginTop: '20vh',\r\n                            },\r\n                        });\r\n                    }\r\n\r\n                }\r\n            ).catch(err => {\r\n            console.log(\"resp:\", err)\r\n            if (err.response.data) {\r\n                message.error({\r\n                    content: err.response.data.message,\r\n                    className: 'custom-class',\r\n                    style: {\r\n                        marginTop: '20vh',\r\n                    },\r\n                });\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    createSubmit$.useSubscription(() => {\r\n        submit()\r\n    })\r\n\r\n\r\n    let FormItems = []\r\n    let formItem = [{\r\n        field: \"question\",\r\n        dataType: \"String\",\r\n        rule: [{\r\n            required: true,\r\n            message: '必须录入!',\r\n        }]\r\n    },\r\n        {\r\n            field: \"answer\",\r\n            dataType: \"String\",\r\n            rule: [{\r\n                required: true,\r\n                message: '必须录入!',\r\n            }]}\r\n\r\n    ]\r\n\r\n    formItem.forEach((e, index) => {\r\n        FormItems.push((\r\n            <Form.Item key={index}\r\n                       name={e.field}\r\n                       label={e.field}\r\n                       rules={e.rule}\r\n            >\r\n                <Input type=\"text\"/>\r\n            </Form.Item>\r\n        ));\r\n    })\r\n\r\n    return useObserver(() => (\r\n\r\n        <Form form={form}\r\n              preserve={false}\r\n              layout=\"vertical\"\r\n              name=\"update\"\r\n        >\r\n            {FormItems}\r\n        </Form>\r\n    ))\r\n}\r\n\r\n\r\nexport default inject('store')(observer(QuestionCreate))",{"ruleId":"108","severity":1,"message":"109","line":7,"column":25,"nodeType":"110","messageId":"111","endLine":7,"endColumn":30},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"108","severity":1,"message":"116","line":7,"column":5,"nodeType":"110","messageId":"111","endLine":7,"endColumn":24},{"ruleId":"108","severity":1,"message":"117","line":8,"column":5,"nodeType":"110","messageId":"111","endLine":8,"endColumn":19},{"ruleId":"108","severity":1,"message":"118","line":2,"column":63,"nodeType":"110","messageId":"111","endLine":2,"endColumn":75},{"ruleId":"108","severity":1,"message":"119","line":55,"column":11,"nodeType":"110","messageId":"111","endLine":55,"endColumn":19},{"ruleId":"108","severity":1,"message":"120","line":63,"column":11,"nodeType":"110","messageId":"111","endLine":63,"endColumn":28},{"ruleId":"121","severity":1,"message":"122","line":12,"column":17,"nodeType":"123","messageId":"124","endLine":12,"endColumn":23},{"ruleId":"108","severity":1,"message":"125","line":11,"column":21,"nodeType":"110","messageId":"111","endLine":11,"endColumn":32},{"ruleId":"108","severity":1,"message":"126","line":96,"column":11,"nodeType":"110","messageId":"111","endLine":96,"endColumn":20},{"ruleId":"108","severity":1,"message":"127","line":159,"column":11,"nodeType":"110","messageId":"111","endLine":159,"endColumn":28},{"ruleId":"108","severity":1,"message":"128","line":4,"column":16,"nodeType":"110","messageId":"111","endLine":4,"endColumn":25},{"ruleId":"108","severity":1,"message":"129","line":4,"column":27,"nodeType":"110","messageId":"111","endLine":4,"endColumn":35},{"ruleId":"130","severity":1,"message":"131","line":20,"column":14,"nodeType":"132","messageId":"133","endLine":22,"endColumn":13},{"ruleId":"108","severity":1,"message":"134","line":1,"column":9,"nodeType":"110","messageId":"111","endLine":1,"endColumn":15},{"ruleId":"108","severity":1,"message":"135","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":20},{"ruleId":"108","severity":1,"message":"109","line":1,"column":44,"nodeType":"110","messageId":"111","endLine":1,"endColumn":49},{"ruleId":"108","severity":1,"message":"136","line":1,"column":51,"nodeType":"110","messageId":"111","endLine":1,"endColumn":54},{"ruleId":"108","severity":1,"message":"137","line":1,"column":56,"nodeType":"110","messageId":"111","endLine":1,"endColumn":61},{"ruleId":"108","severity":1,"message":"138","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":26},{"ruleId":"108","severity":1,"message":"139","line":2,"column":28,"nodeType":"110","messageId":"111","endLine":2,"endColumn":47},{"ruleId":"108","severity":1,"message":"140","line":2,"column":49,"nodeType":"110","messageId":"111","endLine":2,"endColumn":56},{"ruleId":"108","severity":1,"message":"141","line":2,"column":58,"nodeType":"110","messageId":"111","endLine":2,"endColumn":64},{"ruleId":"108","severity":1,"message":"129","line":2,"column":66,"nodeType":"110","messageId":"111","endLine":2,"endColumn":74},{"ruleId":"108","severity":1,"message":"142","line":1,"column":37,"nodeType":"110","messageId":"111","endLine":1,"endColumn":47},{"ruleId":"108","severity":1,"message":"134","line":1,"column":9,"nodeType":"110","messageId":"111","endLine":1,"endColumn":15},{"ruleId":"108","severity":1,"message":"135","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":20},{"ruleId":"108","severity":1,"message":"109","line":1,"column":44,"nodeType":"110","messageId":"111","endLine":1,"endColumn":49},{"ruleId":"108","severity":1,"message":"136","line":1,"column":51,"nodeType":"110","messageId":"111","endLine":1,"endColumn":54},{"ruleId":"108","severity":1,"message":"137","line":1,"column":56,"nodeType":"110","messageId":"111","endLine":1,"endColumn":61},{"ruleId":"108","severity":1,"message":"138","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":26},{"ruleId":"108","severity":1,"message":"139","line":2,"column":28,"nodeType":"110","messageId":"111","endLine":2,"endColumn":47},{"ruleId":"108","severity":1,"message":"141","line":2,"column":49,"nodeType":"110","messageId":"111","endLine":2,"endColumn":55},{"ruleId":"108","severity":1,"message":"129","line":2,"column":57,"nodeType":"110","messageId":"111","endLine":2,"endColumn":65},"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'VideoCameraOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","'Descriptions' is defined but never used.","'location' is assigned a value but never used.","'handleCreateClick' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'useLocation' is defined but never used.","'updateRef' is assigned a value but never used.","'handleCancelClick' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","'Button' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Space' is defined but never used.","'forwardRef' is defined but never used.","'useImperativeHandle' is defined but never used.","'useMemo' is defined but never used.","'useRef' is defined but never used.","'observable' is defined but never used.","no-global-assign","no-unsafe-negation"]