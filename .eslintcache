[{"C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\index.js":"1","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\reportWebVitals.js":"2","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\App.js":"3","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\example\\pages\\user.js":"4","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\example\\pages\\user1.js":"5","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\mock\\example\\index.js":"6","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\lib\\antd\\sorter2s.js":"7","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\lib\\antd\\path.js":"8","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\example\\pages\\user1Detail.js":"9"},{"size":684,"mtime":1622681503260,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1622633199717,"results":"12","hashOfConfig":"11"},{"size":5535,"mtime":1622799224408,"results":"13","hashOfConfig":"11"},{"size":1881,"mtime":1622635249042,"results":"14","hashOfConfig":"11"},{"size":6976,"mtime":1622790044512,"results":"15","hashOfConfig":"11"},{"size":925,"mtime":1622797355886,"results":"16","hashOfConfig":"11"},{"size":1029,"mtime":1622787595542,"results":"17","hashOfConfig":"11"},{"size":727,"mtime":1622767754899,"results":"18","hashOfConfig":"11"},{"size":852,"mtime":1622800758285,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1mqmyz5",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\index.js",[],["42","43"],"C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\reportWebVitals.js",[],"C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\App.js",["44","45","46","47"],"C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\example\\pages\\user.js",[],"C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\example\\pages\\user1.js",["48","49"],"import {React, useState} from 'react';\r\nimport { Button, Col, Form, Input, Row, Table, Select, Modal, Descriptions } from 'antd';\r\nimport { useAntdTable } from 'ahooks';\r\nimport {\r\n    ControlledMenu,\r\n    MenuItem\r\n} from '@szhsin/react-menu';\r\nimport '@szhsin/react-menu/dist/index.css';\r\nimport { PaginatedParams } from 'ahooks/lib/useAntdTable';\r\nimport { sorter2s } from '@/lib/antd/sorter2s'\r\nimport { useHistory, useLocation } from 'react-router';\r\nconst { Option } = Select;\r\n\r\ninterface Item {\r\n    name: {\r\n        last: string;\r\n    };\r\n    email: string;\r\n    phone: string;\r\n    gender: 'male' | 'female';\r\n}\r\n\r\ninterface Result {\r\n    total: number;\r\n    list: Item[];\r\n}\r\n\r\nlet sorters = {}\r\n\r\nconst getTableData = (\r\n\r\n    { current, pageSize,sorter }: PaginatedParams[0],\r\n    formData: Object,\r\n): Promise<Result> => {\r\n\r\n    let query = `page=${current}&size=${pageSize}`;\r\n    Object.entries(formData).forEach(([key, value]) => {\r\n        if (value) {\r\n            query += `&${key}=${value}`;\r\n        }\r\n    });\r\n\r\n    sorters = sorter2s(sorter, sorters)\r\n    console.log(sorters)\r\n    return fetch(`https://randomuser.me/api?results=55&${query}`)\r\n        .then((res) => res.json())\r\n        .then((res) => ({\r\n            total: res.info.results,\r\n            list: res.results,\r\n        }));\r\n};\r\n\r\nconst User1 = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\r\n    const [currentRecord, setCurrentRecord] = useState(null);\r\n    const [modelState, setModelState] = useState({\r\n        title: \"\",\r\n        visible: false\r\n    })\r\n    const handleCreateClick = () => {\r\n        \r\n    }\r\n\r\n    const handleDetailClick = () => {\r\n      \r\n        history.push(location.pathname + \"/\" + currentRecord.id.value)\r\n\r\n    }\r\n\r\n    const handleUpdateClick = () => {\r\n        setModelState({\r\n            title: '修改',\r\n            visible: true\r\n           }\r\n        )\r\n    }\r\n\r\n    const handleDeleteClick = () => {\r\n        \r\n    }\r\n\r\n    const handleCancelClick = () => {\r\n        setModelState({\r\n            visible: false\r\n           }\r\n        )\r\n    }\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const { tableProps, search } = useAntdTable(getTableData, {\r\n        defaultPageSize: 5,\r\n        form,\r\n    });\r\n   \r\n    const { pagination } = tableProps\r\n    pagination.showTotal = (total) => {\r\n        return `共 ${total} 条`;\r\n    }\r\n    pagination.showQuickJumper = true\r\n\r\n    const { type, changeType, submit, reset } = search;\r\n\r\n    const columns = [\r\n        {\r\n            title: 'name',\r\n            dataIndex: ['name', 'last'],\r\n        },\r\n        {\r\n            title: 'email',\r\n            dataIndex: 'email',\r\n        },\r\n        {\r\n            title: 'phone',\r\n            dataIndex: 'phone',\r\n            sorter: {\r\n                multiple: 1,\r\n            }\r\n        },\r\n        {\r\n            title: 'gender',\r\n            dataIndex: 'gender',\r\n            sorter: {\r\n                multiple: 2,\r\n            }\r\n\r\n        },\r\n    ];\r\n\r\n    const advanceSearchForm = (\r\n        <div>\r\n            <Form form={form}>\r\n                <Row gutter={24}>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"name\" name=\"name\">\r\n                            <Input placeholder=\"name\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"email\" name=\"email\">\r\n                            <Input placeholder=\"email\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item label=\"phone\" name=\"phone\">\r\n                            <Input placeholder=\"phone\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row justify=\"end\">\r\n            \r\n                    <Form.Item style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                        <Button type=\"primary\" onClick={submit}>\r\n                            查询\r\n                        </Button>\r\n                        <Button onClick={reset} style={{ marginLeft: 16 }}>\r\n                            重置\r\n                        </Button>\r\n                        <Button type=\"link\" onClick={changeType}>\r\n                            简单查询\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n\r\n    const searchForm = (\r\n        <div style={{ marginBottom: 16 }}>\r\n            <Form form={form} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Form.Item name=\"gender\">\r\n                    <Select style={{ width: 120, marginRight: 16 }} onChange={submit}>\r\n                        <Option value=\"\">all</Option>\r\n                        <Option value=\"male\">male</Option>\r\n                        <Option value=\"female\">female</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name=\"name\">\r\n                    <Input.Search placeholder=\"enter name\" style={{ width: 240 }} onSearch={submit} />\r\n                </Form.Item>\r\n                <Button type=\"link\" onClick={changeType}>\r\n                    复杂查询\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n\r\n  \r\n    const modal = (\r\n        <div>\r\n            <Modal\r\n          title={modelState.title}\r\n          visible={modelState.visible}\r\n          onOk={()=>{}}\r\n          onCancel={handleCancelClick}\r\n          okText=\"确认\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <p>{modelState.visible?currentRecord.gender:null}</p>\r\n        </Modal>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {type === 'simple' ? searchForm : advanceSearchForm}\r\n            <Table \r\n                columns={columns} \r\n                rowKey=\"email\" \r\n                {...tableProps} \r\n                onRow={record => {\r\n                    return {\r\n                      onContextMenu: e => {\r\n                        console.log(record)\r\n                        e.preventDefault();\r\n                        setAnchorPoint({ x: e.clientX, y: e.clientY });\r\n                        setOpen(true);\r\n                        setCurrentRecord(record)\r\n                      },\r\n                    };\r\n                  }}/>\r\n            <ControlledMenu anchorPoint={anchorPoint} isOpen={isOpen}\r\n                onClose={() => setOpen(false)}>\r\n                <MenuItem onClick={handleDetailClick}>详情</MenuItem>\r\n                <MenuItem onClick={handleUpdateClick}>修改</MenuItem>\r\n                <MenuItem onClick={handleDeleteClick}>删除</MenuItem>\r\n            </ControlledMenu>\r\n            {modal}\r\n        </div>\r\n\r\n       \r\n    );\r\n};\r\n\r\nexport default User1","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\mock\\example\\index.js",[],"C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\lib\\antd\\sorter2s.js",["50"],"export const sorter2s = (sorter, sorters) => {\n    if (sorter) {\n        if (Array.isArray(sorter)) {\n            sorter.map((el,index)=>{\n                if (sorter[index].order === 'ascend') {\n                    sorters[sorter[index].field] = 1\n                } else if (sorter[index].order === 'descend') {\n                    sorters[sorter[index].field] = -1\n                } else {\n                   delete sorters[sorter[index].field]\n                }\n                return\n            })\n        } else {\n            if (sorter.order === 'ascend') {\n                sorters[sorter.field] = 1\n            } else if (sorter.order === 'descend') {\n                sorters[sorter.field] = -1\n            } else {\n                delete sorters[sorter.field]\n                \n            }\n            Object.keys(sorters).forEach((field, index) => {\n                if (field !== sorter.field) {\n                    delete sorters[field]\n                }\n            })\n           \n        }\n    }\n    return sorters\n}","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\lib\\antd\\path.js",["51"],"import { Breadcrumb  } from 'antd';\nimport { Link, useLocation }from 'react-router-dom';\n\n//具体导航的名称\nconst breadcrumbNameMap = {\n    '/user':'用户管理',\n    '/user/user_info':'用户信息',\n    '/user/user_info1':'用户信息1',\n}\n\nconst RoutePath = () => {\n    const pathSnippets = useLocation().pathname.split('/').filter(i => i);\n    const extraBreadcrumbItems = pathSnippets.map((_, index) => {\n        const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;    \n        return (\n          <Breadcrumb.Item key={url}>\n               {breadcrumbNameMap[url]}\n          </Breadcrumb.Item>\n        );\n      });\n\n      return <Breadcrumb>{extraBreadcrumbItems}</Breadcrumb>\n}\n\nexport default RoutePath\n","C:\\Users\\aaa\\Desktop\\copy\\react-crud\\src\\example\\pages\\user1Detail.js",["52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":2,"column":23,"nodeType":"60","messageId":"61","endLine":2,"endColumn":33},{"ruleId":"58","severity":1,"message":"62","line":2,"column":47,"nodeType":"60","messageId":"61","endLine":2,"endColumn":54},{"ruleId":"58","severity":1,"message":"63","line":7,"column":5,"nodeType":"60","messageId":"61","endLine":7,"endColumn":24},{"ruleId":"58","severity":1,"message":"64","line":8,"column":5,"nodeType":"60","messageId":"61","endLine":8,"endColumn":19},{"ruleId":"58","severity":1,"message":"65","line":2,"column":63,"nodeType":"60","messageId":"61","endLine":2,"endColumn":75},{"ruleId":"58","severity":1,"message":"66","line":63,"column":11,"nodeType":"60","messageId":"61","endLine":63,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":12,"column":17,"nodeType":"69","messageId":"70","endLine":12,"endColumn":23},{"ruleId":"58","severity":1,"message":"71","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":14},{"ruleId":"58","severity":1,"message":"72","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":20},{"ruleId":"58","severity":1,"message":"73","line":5,"column":10,"nodeType":"60","messageId":"61","endLine":5,"endColumn":18},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Breadcrumb' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.","'VideoCameraOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","'Descriptions' is defined but never used.","'handleCreateClick' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'Link' is defined but never used.","'useRequest' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]