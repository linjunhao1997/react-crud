[{"D:\\前端项目\\antdtemplate\\src\\index.js":"1","D:\\前端项目\\antdtemplate\\src\\reportWebVitals.js":"2","D:\\前端项目\\antdtemplate\\src\\App.js":"3","D:\\前端项目\\antdtemplate\\src\\lib\\antd\\path.js":"4","D:\\前端项目\\antdtemplate\\src\\mock\\example\\index.js":"5","D:\\前端项目\\antdtemplate\\src\\pages\\question\\question_detail.js":"6","D:\\前端项目\\antdtemplate\\src\\pages\\question\\question_update.js":"7","D:\\前端项目\\antdtemplate\\src\\store\\index.js":"8","D:\\前端项目\\antdtemplate\\src\\context\\index.js":"9","D:\\前端项目\\antdtemplate\\src\\store\\QuestionStore.js":"10","D:\\前端项目\\antdtemplate\\src\\pages\\question\\question_create.js":"11","D:\\前端项目\\antdtemplate\\src\\utils\\basefunc\\index.js":"12","D:\\前端项目\\antdtemplate\\src\\utils\\request\\base_request.js":"13","D:\\前端项目\\antdtemplate\\src\\pages\\question\\home_page.js":"14","D:\\前端项目\\antdtemplate\\src\\components\\question\\table_component.js":"15","D:\\前端项目\\antdtemplate\\src\\components\\question\\update_modal_component.js":"16","D:\\前端项目\\antdtemplate\\src\\components\\question\\update_form_component.js":"17"},{"size":909,"mtime":1622988090886,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1607146478463,"results":"20","hashOfConfig":"19"},{"size":5222,"mtime":1626289140581,"results":"21","hashOfConfig":"19"},{"size":815,"mtime":1626289308796,"results":"22","hashOfConfig":"19"},{"size":963,"mtime":1622818652500,"results":"23","hashOfConfig":"19"},{"size":897,"mtime":1626117253875,"results":"24","hashOfConfig":"19"},{"size":2735,"mtime":1623048046368,"results":"25","hashOfConfig":"19"},{"size":220,"mtime":1622985544514,"results":"26","hashOfConfig":"19"},{"size":90,"mtime":1622957865962,"results":"27","hashOfConfig":"19"},{"size":675,"mtime":1626298286622,"results":"28","hashOfConfig":"19"},{"size":2772,"mtime":1622993855200,"results":"29","hashOfConfig":"19"},{"size":1943,"mtime":1626296929539,"results":"30","hashOfConfig":"19"},{"size":923,"mtime":1626103555043,"results":"31","hashOfConfig":"19"},{"size":383,"mtime":1626294411216,"results":"32","hashOfConfig":"19"},{"size":8524,"mtime":1626298656327,"results":"33","hashOfConfig":"19"},{"size":3068,"mtime":1626298043704,"results":"34","hashOfConfig":"19"},{"size":1643,"mtime":1626297344283,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"co4f4z",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\前端项目\\antdtemplate\\src\\index.js",["76"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport {ConfigProvider, Modal} from 'antd';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from \"mobx-react\";\nimport store from \"@/store/QuestionStore\";\n\n\nReactDOM.render(\n    /*<React.StrictMode>*/\n    <ConfigProvider locale={zhCN}>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </ConfigProvider>,\n    /*</React.StrictMode>,*/\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["77","78"],"D:\\前端项目\\antdtemplate\\src\\reportWebVitals.js",[],"D:\\前端项目\\antdtemplate\\src\\App.js",["79","80"],"D:\\前端项目\\antdtemplate\\src\\lib\\antd\\path.js",[],"D:\\前端项目\\antdtemplate\\src\\mock\\example\\index.js",[],["81","82"],"D:\\前端项目\\antdtemplate\\src\\pages\\question\\question_detail.js",["83"],"import {Descriptions} from 'antd'\r\nimport {useRequest} from 'ahooks'\r\nimport {useParams} from 'react-router-dom'\r\nimport React from 'react';\r\nimport {getSingleData} from '@/utils/basefunc'\r\nconst QuestionDetail = () => {\r\n    const { id } = useParams()\r\n    const { data, error, loading } = useRequest( `/api/question/${id}`, {\r\n        requestMethod: (service) => getSingleData(service)\r\n    })\r\n    if (error) {\r\n        return <div>failed to load</div>;\r\n    }\r\n    if (loading) {\r\n        return <div>loading...</div>;\r\n    }\r\n    let result = data.data\r\n    return (\r\n        <div>\r\n            // todo  如果是对象或者null不能直接输出\r\n            <Descriptions title=\"问题详情\">\r\n               <Descriptions.Item label=\"question\" key=\"question\">{result[\"question\"]}</Descriptions.Item>\r\n            </Descriptions>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionDetail","D:\\前端项目\\antdtemplate\\src\\pages\\question\\question_update.js",["84","85","86","87","88","89","90","91","92","93"],"import {Button, Col, Form, Input, message, Modal, Row, Space} from \"antd\";\r\nimport React, {forwardRef, useImperativeHandle, useMemo, useRef, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useObserver} from \"mobx-react-lite\";\r\nimport {useStores} from \"@/store\";\r\n\r\nconst QuestionUpdate = (props) => {\r\n\r\n    const {QuestionStore} = useStores()\r\n    const [form] = Form.useForm()\r\n    const {updateSubmit$, refresh} = props\r\n    form.setFieldsValue(QuestionStore.currentQuestionRecord)\r\n    const submit = () => {\r\n        axios.patch(`/api/question/${QuestionStore.currentQuestionRecord.id}`, form.getFieldsValue())\r\n            .then((resp) => {\r\n                    if (resp.data.success) {\r\n                        message.success({\r\n                            content: resp.data.message,\r\n                            className: 'custom-class',\r\n                            style: {\r\n                                marginTop: '20vh',\r\n                            },\r\n                        });\r\n                        QuestionStore.setCurrentQuestionRecord(resp.data)\r\n                        refresh()\r\n                    } else {\r\n                        message.error({\r\n                            content: resp.data.message,\r\n                            className: 'custom-class',\r\n                            style: {\r\n                                marginTop: '20vh',\r\n                            },\r\n                        });\r\n                    }\r\n\r\n                }\r\n            ).catch(resp => {\r\n            console.log(resp)\r\n            if (resp.data) {\r\n                message.error({\r\n                    content: resp.data.message,\r\n                    className: 'custom-class',\r\n                    style: {\r\n                        marginTop: '20vh',\r\n                    },\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    updateSubmit$.useSubscription(() => {\r\n        submit()\r\n    })\r\n\r\n\r\n    let FormItems = []\r\n    let formItem = [{\r\n        field: \"question\",\r\n        dataType: \"String\",\r\n        rule: [{\r\n            required: true,\r\n            message: '必须录入!',\r\n        }]\r\n    }]\r\n\r\n    formItem.forEach((e, index) => {\r\n        FormItems.push((\r\n            <Form.Item key={index}\r\n                       name={e.field}\r\n                       label={e.field}\r\n                       rules={e.rule}\r\n            >\r\n                <Input type=\"text\"/>\r\n            </Form.Item>\r\n        ));\r\n    })\r\n\r\n    return useObserver(() => (\r\n        <Form form={form}\r\n              preserve={false}\r\n              layout=\"vertical\"\r\n              name=\"update\"\r\n        >\r\n            {FormItems}\r\n        </Form>\r\n    ))\r\n}\r\n\r\n\r\nexport default QuestionUpdate","D:\\前端项目\\antdtemplate\\src\\store\\index.js",[],"D:\\前端项目\\antdtemplate\\src\\context\\index.js",[],"D:\\前端项目\\antdtemplate\\src\\store\\QuestionStore.js",["94"],"D:\\前端项目\\antdtemplate\\src\\pages\\question\\question_create.js",["95","96","97","98","99","100","101","102","103"],"import {Button, Col, Form, Input, message, Modal, Row, Space} from \"antd\";\r\nimport React, {forwardRef, useImperativeHandle, useRef, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {useObserver} from \"mobx-react-lite\";\r\n\r\nconst QuestionCreate = (props) => {\r\n\r\n    const [form] = Form.useForm()\r\n    const {createSubmit$, refresh} = props\r\n\r\n    const submit = () => {\r\n\r\n        axios.post(`/api/question`, form.getFieldsValue())\r\n            .then((resp) => {\r\n                    if (resp.data.success) {\r\n                        message.success({\r\n                            content: resp.data.message,\r\n                            className: 'custom-class',\r\n                            style: {\r\n                                marginTop: '20vh',\r\n                            },\r\n                        });\r\n                        refresh()\r\n                    } else {\r\n                        message.error({\r\n                            content: resp.data.message,\r\n                            className: 'custom-class',\r\n                            style: {\r\n                                marginTop: '20vh',\r\n                            },\r\n                        });\r\n                    }\r\n\r\n                }\r\n            ).catch(err => {\r\n            console.log(\"resp:\", err)\r\n            if (err.response.data) {\r\n                message.error({\r\n                    content: err.response.data.message,\r\n                    className: 'custom-class',\r\n                    style: {\r\n                        marginTop: '20vh',\r\n                    },\r\n                });\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    createSubmit$.useSubscription(() => {\r\n        submit()\r\n    })\r\n\r\n\r\n    let FormItems = []\r\n    let formItem = [{\r\n        field: \"question\",\r\n        dataType: \"String\",\r\n        rule: [{\r\n            required: true,\r\n            message: '必须录入!',\r\n        }]\r\n    },\r\n        {\r\n            field: \"answer\",\r\n            dataType: \"String\",\r\n            rule: [{\r\n                required: true,\r\n                message: '必须录入!',\r\n            }]}\r\n\r\n    ]\r\n\r\n    formItem.forEach((e, index) => {\r\n        FormItems.push((\r\n            <Form.Item key={index}\r\n                       name={e.field}\r\n                       label={e.field}\r\n                       rules={e.rule}\r\n            >\r\n                <Input type=\"text\"/>\r\n            </Form.Item>\r\n        ));\r\n    })\r\n\r\n    return useObserver(() => (\r\n\r\n        <Form form={form}\r\n              preserve={false}\r\n              layout=\"vertical\"\r\n              name=\"update\"\r\n        >\r\n            {FormItems}\r\n        </Form>\r\n    ))\r\n}\r\n\r\n\r\nexport default inject('store')(observer(QuestionCreate))","D:\\前端项目\\antdtemplate\\src\\utils\\basefunc\\index.js",["104"],"D:\\前端项目\\antdtemplate\\src\\utils\\request\\base_request.js",[],"D:\\前端项目\\antdtemplate\\src\\pages\\question\\home_page.js",[],"D:\\前端项目\\antdtemplate\\src\\components\\question\\table_component.js",["105","106","107","108"],"D:\\前端项目\\antdtemplate\\src\\components\\question\\update_modal_component.js",["109","110"],"D:\\前端项目\\antdtemplate\\src\\components\\question\\update_form_component.js",[],{"ruleId":"111","severity":1,"message":"112","line":7,"column":25,"nodeType":"113","messageId":"114","endLine":7,"endColumn":30},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"111","severity":1,"message":"119","line":7,"column":5,"nodeType":"113","messageId":"114","endLine":7,"endColumn":24},{"ruleId":"111","severity":1,"message":"120","line":8,"column":5,"nodeType":"113","messageId":"114","endLine":8,"endColumn":19},{"ruleId":"115","replacedBy":"121"},{"ruleId":"117","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":19,"column":14,"nodeType":"125","messageId":"126","endLine":21,"endColumn":13},{"ruleId":"111","severity":1,"message":"127","line":1,"column":9,"nodeType":"113","messageId":"114","endLine":1,"endColumn":15},{"ruleId":"111","severity":1,"message":"128","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":1,"column":44,"nodeType":"113","messageId":"114","endLine":1,"endColumn":49},{"ruleId":"111","severity":1,"message":"129","line":1,"column":51,"nodeType":"113","messageId":"114","endLine":1,"endColumn":54},{"ruleId":"111","severity":1,"message":"130","line":1,"column":56,"nodeType":"113","messageId":"114","endLine":1,"endColumn":61},{"ruleId":"111","severity":1,"message":"131","line":2,"column":16,"nodeType":"113","messageId":"114","endLine":2,"endColumn":26},{"ruleId":"111","severity":1,"message":"132","line":2,"column":28,"nodeType":"113","messageId":"114","endLine":2,"endColumn":47},{"ruleId":"111","severity":1,"message":"133","line":2,"column":49,"nodeType":"113","messageId":"114","endLine":2,"endColumn":56},{"ruleId":"111","severity":1,"message":"134","line":2,"column":58,"nodeType":"113","messageId":"114","endLine":2,"endColumn":64},{"ruleId":"111","severity":1,"message":"135","line":2,"column":66,"nodeType":"113","messageId":"114","endLine":2,"endColumn":74},{"ruleId":"111","severity":1,"message":"136","line":1,"column":37,"nodeType":"113","messageId":"114","endLine":1,"endColumn":47},{"ruleId":"111","severity":1,"message":"127","line":1,"column":9,"nodeType":"113","messageId":"114","endLine":1,"endColumn":15},{"ruleId":"111","severity":1,"message":"128","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":1,"column":44,"nodeType":"113","messageId":"114","endLine":1,"endColumn":49},{"ruleId":"111","severity":1,"message":"129","line":1,"column":51,"nodeType":"113","messageId":"114","endLine":1,"endColumn":54},{"ruleId":"111","severity":1,"message":"130","line":1,"column":56,"nodeType":"113","messageId":"114","endLine":1,"endColumn":61},{"ruleId":"111","severity":1,"message":"131","line":2,"column":16,"nodeType":"113","messageId":"114","endLine":2,"endColumn":26},{"ruleId":"111","severity":1,"message":"132","line":2,"column":28,"nodeType":"113","messageId":"114","endLine":2,"endColumn":47},{"ruleId":"111","severity":1,"message":"134","line":2,"column":49,"nodeType":"113","messageId":"114","endLine":2,"endColumn":55},{"ruleId":"111","severity":1,"message":"135","line":2,"column":57,"nodeType":"113","messageId":"114","endLine":2,"endColumn":65},{"ruleId":"137","severity":1,"message":"138","line":31,"column":17,"nodeType":"139","messageId":"140","endLine":31,"endColumn":23},{"ruleId":"111","severity":1,"message":"141","line":10,"column":8,"nodeType":"113","messageId":"114","endLine":10,"endColumn":22},{"ruleId":"111","severity":1,"message":"142","line":38,"column":11,"nodeType":"113","messageId":"114","endLine":38,"endColumn":20},{"ruleId":"111","severity":1,"message":"143","line":46,"column":11,"nodeType":"113","messageId":"114","endLine":46,"endColumn":34},{"ruleId":"111","severity":1,"message":"144","line":92,"column":11,"nodeType":"113","messageId":"114","endLine":92,"endColumn":28},{"ruleId":"111","severity":1,"message":"145","line":14,"column":12,"nodeType":"113","messageId":"114","endLine":14,"endColumn":19},{"ruleId":"111","severity":1,"message":"146","line":14,"column":21,"nodeType":"113","messageId":"114","endLine":14,"endColumn":31},"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","no-native-reassign",["147"],"no-negated-in-lhs",["148"],"'VideoCameraOutlined' is defined but never used.","'UploadOutlined' is defined but never used.",["147"],["148"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","'Button' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Space' is defined but never used.","'forwardRef' is defined but never used.","'useImperativeHandle' is defined but never used.","'useMemo' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'observable' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'QuestionUpdate' is defined but never used.","'updateRef' is assigned a value but never used.","'handleUpdateSubmitClick' is assigned a value but never used.","'handleCancelClick' is assigned a value but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]